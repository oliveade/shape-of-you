name: ci

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer, php-cs-fixer, phpstan

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: npm

      - name: Cache Composer Dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer Dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: |
          export APP_ENV=test
          composer install --prefer-dist --no-interaction --no-progress

      - name: Cache Npm Dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

  linters:
    name: Linters
    runs-on: ubuntu-latest
    needs: deps
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Composer cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-

      - name: Run PHP-CS-Fixer
        run: php-cs-fixer check src --diff --dry-run
        continue-on-error: true

      - name: Run PHPStan
        run: phpstan analyse src -l 9 --no-progress
        continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: deps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-

      - name: Build
        run: npm run build

  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Composer cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-

      - name: Run tests
        run: |
          echo "Todo: unit tests."

  functional_tests:
    name: Functional tests
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: app_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: app
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Composer cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-

      - name: Check Database healthy
        run: nc -vz localhost 5432

      - name: Run migrations
        env:
          APP_ENV: test
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          DATABASE_NAME: app_test
          DATABASE_PASSWORD: postgres
          DATABASE_USER: app
        run: php bin/console d:m:m

      - name: Run tests
        env:
          APP_ENV: test
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          DATABASE_NAME: app_test
          DATABASE_PASSWORD: postgres
          DATABASE_USER: app
        run: |
          echo "Todo: functional tests."

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [ unit_tests, functional_tests ]
    steps:
      - name: Notify
        run: echo "All tests passed with success!"