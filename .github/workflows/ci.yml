name: ci

on:
  pull_request:
    types: [ opened, closed ]
    branches:
      - main
  push:
    branches-ignore:
      - main

jobs:
  deps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2, php-cs-fixer, phpstan

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: npm

      - name: Cache vendor
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer Dependencies
        env:
          MAILER_SENDER_EMAIL_ENV: ${{ vars.MAILER_SENDER_EMAIL }}
        run: |
          export APP_ENV=test
          composer install --prefer-dist --no-interaction --no-progress
          echo "APP_ENV=${{ vars.APP_ENV }}" >> .env.test.local
          echo "APP_SECRET=${{ secrets.APP_SECRET_TEST }}" >> .env.test.local
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env.test.local
          echo "MAILER_DSN=${{ secrets.MAILER_DSN }}" >> .env.test.local
          echo "MAILER_RESEND_SECRET=${{ secrets.MAILER_RESEND_SECRET }}" >> .env.test.local
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" >> .env.test.local
          echo "CONTENT_API_KEY=${{ secrets.CONTENT_API_KEY }}" >> .env.test.local
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env.test.local
          cat .env.test.local

      - name: Install Node Dependencies
        run: npm install

  linters:
    name: Linters
    runs-on: ubuntu-latest
    needs: deps
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore Cache vendor
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}

      - name: Run PHP-CS-Fixer
        run: php-cs-fixer check src --diff --dry-run
        continue-on-error: true

      - name: Run PHPStan
        run: phpstan analyse src -l 9 --no-progress
        continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: deps
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build
        run: echo 'npm run build'

  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore Cache vendor
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}

      - name: Run tests
        run: |
          echo "Todo: unit tests."

  functional_tests:
    name: Functional tests
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore Cache vendor
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}

      - name: Run tests
        run: |
          echo "Todo: functional tests."

  deploy:
    name: Deploy
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: [ unit_tests, functional_tests ]
    concurrency: production_environment
    #      group: production_environment
    #      cancel-in-progress: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Install dependencies
        run: composer install


      - name: Deploy with deployer
        uses: deployphp/action@v1
        with:
          private-key: ${{ secrets.PRIVATE_KEY }}
          dep: deploy
